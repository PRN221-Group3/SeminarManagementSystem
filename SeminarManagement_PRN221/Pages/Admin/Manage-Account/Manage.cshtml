@page
@using Repositories
@model SeminarManagement_PRN221.Pages.Admin.Manage_Account.IndexModel
@{
    Layout = "_AdminLayout";
}

<h2 class="text-center mb-5">List of Accounts</h2>

<style>
    body {
        background-color: #f5f5f5;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .container-custom {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .table-custom th {
        background-color: #343a40;
        color: #ffffff;
    }

    .btn-custom {
        background-color: #343a40;
        color: #ffffff;
    }

        .btn-custom:hover {
            background-color: #495057;
            color: #ffffff;
        }

    .alert-dismissible .btn-close {
        position: absolute;
        top: 0;
        right: 0;
        padding: 1rem 1rem;
    }
</style>

<div class="container-custom">
    <div class="row mb-4">
        <div class="col text-end">
            <a class='btn btn-custom' href='/Admin/Manage-Account/Create'>
                <i class="fas fa-plus"></i> New Account
            </a>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col">
            <form method="get">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search..." name="searchQuery">
                    <button class="btn btn-outline-secondary" type="submit">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
            </form>
        </div>
    </div>

    <table class="table table-bordered table-hover table-custom">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Username</th>
                <th>Role</th>
                <th>Deleted</th>
                <th>Activated</th>
                <th>Created Date</th>
                <th>Updated Date</th>
                <th>QR Code</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                var rowClass = user.IsDeleted == true ? "table-danger" : string.Empty;
                <tr class="@rowClass">
                    <td>@user.UserId</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.PhoneNumber</td>
                    <td>@user.Username</td>
                    <td>@GetRoleName(user.RoleId)</td>
                    <td>@user.IsDeleted</td>
                    <td>@user.IsActivated</td>
                    <td>@user.CreatedDate?.ToString("MM/dd/yyyy")</td>
                    <td>@user.UpdatedDate?.ToString("MM/dd/yyyy")</td>
                    <td>@user.QrCode</td>
                    <td class="text-center">
                        <a class="btn btn-primary btn-sm" asp-page="/Admin/Manage-Account/Update" asp-route-id="@user.UserId">
                            <i class="fas fa-edit"></i> Update
                        </a>
                        <a class="btn btn-danger btn-sm" asp-page="/Admin/Manage-Account/Delete" asp-route-id="@user.UserId">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@functions {
    private string GetRoleName(Guid? roleId)
    {
        if (roleId == null || roleId == Guid.Empty)
            return "Role not assigned";

        if (Model.RoleNames.TryGetValue(roleId.Value, out var roleName))
        {
            return roleName;
        }

        return "Role not found";
    }
}

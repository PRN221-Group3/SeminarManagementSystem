@page "/AdminDashboard/Index"
@using Newtonsoft.Json
@model SeminarManagement_PRN221.Pages.UserRole.AdminDashboard.IndexModel
@{
    ViewData["Title"] = "Admin";
    Layout = "_AdminLayout";
    var monthlyRevenueJson = JsonConvert.SerializeObject(Model.MonthlyRevenue);
    var monthlyTicketsSoldJson = JsonConvert.SerializeObject(Model.MonthlyTicketsSold);
    var sponsorStatusJson = JsonConvert.SerializeObject(Model.SponsorStatusData);
}
<section class="bg-dark">

</section>
<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Dashboard</li>
    </ol>
    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">Tickets Sold: @Model.TicketsSold</div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">Tickets Available: @Model.TicketsAvailable</div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">Revenue: @string.Format("{0:N0}", @Model.Revenue) VND</div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-area me-1"></i>
                    Revenue Chart
                </div>
                <div class="card-body">
                    <canvas id="revenueChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Tickets Sold Chart
                </div>
                <div class="card-body">
                    <canvas id="ticketsSoldChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Sponsor Status Chart
                </div>
                <div class="card-body">
                    <div style="width: 250px; height: 250px; margin: 0 auto;">
                        <canvas id="sponsorStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Sponsor Products
        </div>
        <div class="card-body">
            <table id="datatablesSimple" class="table-primary">
                <thead>
                    <tr>
                        <th>Sponsor</th>
                        <th>Product</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var sponsorProduct in Model.SponsorProducts)
                    {
                        <tr>
                            <td>@sponsorProduct.Sponsor.SponsorName</td>
                            <td>@sponsorProduct.SponsorProduct</td>
                            <td>@sponsorProduct.Status</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Transaction History
        </div>
        <div class="card-body">
            <table id="datatablesSimpleTransactions" class="table-primary">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Amount</th>
                        <th>Status</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.Transactions)
                    {
                        <tr>
                            <td>@transaction.Wallet.WalletNavigation.Username</td>
                            <td>@transaction.DepositAmount?.ToString("N0")đ</td>
                            <td>@transaction.TransactionStatus</td>
                            <td>@transaction.CreationDate?.ToString("dd/MM/yyyy HH:mm:ss")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js" crossorigin="anonymous"></script>
    <script src="~/js/datatables-simple-demo.js"></script>
    <script>
        window.addEventListener('DOMContentLoaded', event => {
            // Simple-DataTables
            const datatablesSimple = document.getElementById('datatablesSimple');
            if (datatablesSimple) {
                new simpleDatatables.DataTable(datatablesSimple);
            }

            const datatablesSimpleTransactions = document.getElementById('datatablesSimpleTransactions');
            if (datatablesSimpleTransactions) {
                new simpleDatatables.DataTable(datatablesSimpleTransactions);
            }

            var monthlyRevenueData = @Html.Raw(monthlyRevenueJson);
            var monthlyTicketsSoldData = @Html.Raw(monthlyTicketsSoldJson);
            var sponsorStatusData = @Html.Raw(sponsorStatusJson);

            function formatDate(dateStr) {
                var date = new Date(dateStr);
                var day = ("0" + date.getDate()).slice(-2);
                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                var year = date.getFullYear();
                return `${day}/${month}/${year}`;
            }

            var revenueLabels = Object.keys(monthlyRevenueData).map(dateStr => formatDate(dateStr));
            var ticketsSoldLabels = Object.keys(monthlyTicketsSoldData).map(dateStr => formatDate(dateStr));

            var ctxRevenue = document.getElementById('revenueChart').getContext('2d');
            var revenueChart = new Chart(ctxRevenue, {
                type: 'line',
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenue',
                        data: Object.values(monthlyRevenueData),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            var ctxTicketsSold = document.getElementById('ticketsSoldChart').getContext('2d');
            var ticketsSoldChart = new Chart(ctxTicketsSold, {
                type: 'bar',
                data: {
                    labels: ticketsSoldLabels,
                    datasets: [{
                        label: 'Tickets Sold',
                        data: Object.values(monthlyTicketsSoldData),
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            var ctxSponsorStatus = document.getElementById('sponsorStatusChart').getContext('2d');
            var sponsorStatusChart = new Chart(ctxSponsorStatus, {
                type: 'doughnut',
                data: {
                    labels: Object.keys(sponsorStatusData),
                    datasets: [{
                        label: 'Sponsor Status',
                        data: Object.values(sponsorStatusData),
                        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)'],
                        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true
                }
            });
        });
    </script>
}

@page
@model SeminarManagement_PRN221.Pages.Events.JoinModel
@{
}
<div class="container-fluid mt-5">
    <div class="row">
        <!-- Image column -->
        <div class="col-md-4">
            <img src="https://img.freepik.com/premium-photo/speaker-giving-talk-scientific-conference-audience-conference-hall-business-entrepreneurship-concept_561846-238.jpg" class="img-fluid rounded-start" alt="Event Image">
        </div>
        <!-- Event details and form column -->
        <div class="col-md-8">
            <div class="px-4">
                <h2>Event Details</h2>
                <div class="row">
                    <div class="col-md-6">
                        <p>
                            <strong>Event Name:</strong> @Model.Event.EventName
                        </p>
                        <p><strong>Date:</strong> @Model.Event.StartDate?.ToString("dd/MM/yyyy HH:mm") - @Model.Event.EndDate?.ToString("dd/MM/yyyy HH:mm")</p>
                        <p>
                            <strong>Description:</strong> @Model.Event.Description
                        </p>
                    </div>
                    <div class="col-md-6">
                        <p>
                            <strong>Event Code:</strong> @Model.Event.EventCode
                        </p>
                        <p>
                            <strong>Fee:</strong>
                            @if (Model.Event.Fee > 0)
                            {
                                <text>$@Model.Event.Fee</text>
                            }
                            else
                            {
                                <text>FREE</text>
                            }
                        </p>
                        <p>
                            <strong>Status:</strong>
                            @if (DateTime.Now < Model.Event.StartDate)
                            {
                                <span class="badge bg-primary">Future</span>
                            }
                            else if (DateTime.Now >= Model.Event.StartDate && DateTime.Now <= Model.Event.EndDate)
                            {
                                <span class="badge bg-success">Open</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Closed</span>
                            }
                        </p>
                    </div>
                </div>

                <!-- Form for payment -->
                <form method="post" class="mt-4">
                    <div class="row">
                        <div id="error-message" class="text-danger" style="display: none;"></div>
                        <div class="col-md-6">
                            <div class="mb-3 d-flex justify-content-between">
                                <div class="input-group">
                                    <button type="button" class="btn btn-warning" onclick="changeQuantity(-1)">-</button>
                                    <input id="quantity" type="text" name="quantity" value="@Model.Quantity" min="1" 
                                    max="@Model.MaxQuantity" width="80" class="text-md-center" onchange="setQuantityText()" />
                                    <button type="button" class="btn btn-warning" onclick="changeQuantity(1)">+</button>
                                </div>
                            </div>
                            <hr class="my-4">
                            <div class="mb-3 d-flex justify-content-between">
                                <label for="fee" class="form-label">Subtotal</label>
                                <span>$@Model.Event.Fee</span>
                                <input type="hidden" id="fee" name="fee" value="@Model.Event.Fee">
                            </div>

                        </div>
                    </div>
                    @if (Model.Wallet != null)
                    {
                        <input type="hidden" name="walletId" value="@Model.Wallet.WalletId" />
                        <input type="hidden" name="balance" value="@Model.Wallet.Balance" />
                        @if (Model.TransactionExist != null)
                        {
                            <button type="submit" class="btn btn-lg btn-primary" disabled>Next</button>
                            <span class="text-danger">You have already joined this event.</span>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-lg btn-primary" id="btnNExt">Next</button>
                        }
                    }
                    else
                    {
                        <a class="btn btn-lg btn-primary" asp-area="Identity" asp-page="/Account/Login">Next</a>
                    }
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function changeQuantity(change) {
            var quantityInput = document.getElementById("quantity");
            var currentQuantity = parseInt(quantityInput.value);
            var maxQuantity = @Model.MaxQuantity;
            var newQuantity = currentQuantity + change;
            if (newQuantity <= 0) {
                newQuantity = currentQuantity;
            }

            if (newQuantity > maxQuantity) {
                newQuantity = currentQuantity;
                document.getElementById("increase-btn").ariaDisabled;
            }

            console.log(newQuantity);
            quantityInput.value = newQuantity;
        }

        function setQuantityText() {
            var quantityInput = document.getElementById("quantity");
            var errorMessage = document.getElementById("error-message");
            var currentQuantity = parseInt(quantityInput.value);
            var maxQuantity = @Model.MaxQuantity;

            if (currentQuantity > maxQuantity) {
                quantityInput.value = maxQuantity; // Set the quantity to maxQuantity
                errorMessage.textContent = `Quantity cannot exceed ${maxQuantity}.`;
                errorMessage.style.display = "block";
            } else if (currentQuantity < 1) {
                quantityInput.value = 1; // Ensure the quantity does not go below 1
                errorMessage.textContent = "Quantity cannot be less than 1.";
                errorMessage.style.display = "block";
            } else {
                errorMessage.style.display = "none"; // Hide error message if quantity is within the valid range
            }
        }
    </script>
}